"""
Django settings for lang_app project.

Generated by 'django-admin startproject' using Django 4.2.8.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

# played around this file way too much with the file paths having a lot of issues 
# the STATIC_URL and paths and all that, the default base dir wasn't correct for my needs too, 
# because other paths reference the base_dir and the wrong base_dir creates a chain of errors.
from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# adding another .parent to the Path, move up one more directory in the file system
BASE_DIR = Path(__file__).resolve().parent.parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# i replaced this
SECRET_KEY = 'django-secret-key'

# SECURITY WARNING: don't run with debug turned on in production! :)
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'debug_toolbar',
    'rest_framework',
    'rest_framework.authtoken',
    'dj_rest_auth',
    'allauth',
    'allauth.account',
    'dj_rest_auth.registration',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.facebook',
    'allauth.socialaccount.providers.twitter',
    'allauth.socialaccount.providers.google',
    'compressor',
    'corsheaders',
    'myapi',
    'backend.lang_chat',
    'backend.login',
    #'frontend.static',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'allauth.account.middleware.AccountMiddleware',   
]

ROOT_URLCONF = 'backend.lang_app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'dist'), os.path.join(BASE_DIR, 'frontend', 'static')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.lang_app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'database-name',
        'USER': 'database-username',
        'PASSWORD': 'database-password',
        'HOST': '127.0.0.1',
        'PORT': '5432',
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Hong_Kong'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

# the base URL for serving static files
STATIC_URL = '/static/'

# using webpack npm so the static file directory will be 
# where webpack will output stuff and output the bundle files
# which in my case is direcotry where config is / dist
# a list of directories where Django will look for additional static files
# aside from the static directory of each installed application
STATICFILES_DIRS = [ 
    BASE_DIR / 'dist',
    BASE_DIR / 'static',
    #os.path.join(BASE_DIR, 'static'),
    ]


# where collected static files will go
#STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

INTERNAL_IPS = [
    # ...s
    "127.0.0.1",
    # ...
]

ALLOWED_HOSTS = ["127.0.0.1", "localhost"]

AUTHENTICATION_BACKENDS = (
    # ... other authentication backends
    'allauth.account.auth_backends.AuthenticationBackend',
    'django.contrib.auth.backends.ModelBackend',
)

ACCOUNT_EMAIL_VERIFICATION = "none"

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'  # For development purposes

SITE_ID = 1  # Configure the site ID that allauth uses

COMPRESS_ROOT = BASE_DIR / 'dist'
  
COMPRESS_ENABLED = True
  
STATICFILES_FINDERS = ('compressor.finders.CompressorFinder',)

COMPRESS_URL = '/static/'

def show_toolbar(request):
    return not request.path.startswith(('/login/', '/register/'))

DEBUG_TOOLBAR_CONFIG = {
    'SHOW_TOOLBAR_CALLBACK': show_toolbar,
}

# debug purposes
print(f"STATICFILES_DIRS is currently: {STATICFILES_DIRS}")
print(f"STATIC_ROOT is currently: {STATIC_ROOT}")
print(f"STATIC_URL is currently: {STATIC_URL}")
print(f"BASE_DIR is currently: {BASE_DIR}")

CORS_ALLOW_ALL_ORIGINS = True

# Or to allow specific origins:
CORS_ALLOWED_ORIGINS = [
    'http://localhost:8080',
]

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
}